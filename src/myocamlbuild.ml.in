(*
 * OSDP (OCaml SDP) is an OCaml frontend library to semi-definite
 * programming (SDP) solvers.
 * Copyright (C) 2012, 2014  P. Roux and P.L. Garoche
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *)

open Ocamlbuild_plugin
open Command

let with_mosek = "@with_mosek@"
let mosek_rpath="-Wl,-rpath-link=@MOSEK_LIBPATH@"
(* On OSX, fix the path after linking *)
let mosek_rpath=""
let mosek_lib = "-l@MOSEK_LIB@"
let mosek_libdir = "-L@MOSEK_LIBPATH@"
let mosek_include = "-I@MOSEK_INCPATH@"

let cclib l = List.flatten (List.map (fun x -> [A"-cclib"; A x]) l)

;;

dispatch begin function
| After_rules ->
   dep ["compile"; "c"] ["config.h"; "sdp_ret.h"];
   flag ["link"; "ocaml"; "library"; "byte"; "use_libosdp"] &
     S[A"-dllib"; A"-losdp"];
   flag ["link"; "ocaml"; "library"; "use_libosdp"] &
     S[A"-cclib"; A"-losdp"];
   dep ["link"; "ocaml"; "byte"; "use_libosdp"] ["dllosdp.so"];
   dep ["link"; "ocaml"; "native"; "use_libosdp"] ["libosdp.a"];
   flag ["link"; "ocaml"; "link_libosdp"] (A"libosdp.a");
   (* posdef *)
   flag ["compile"; "c"] & S[A"-ccopt"; A"-frounding-math"];
   flag ["link"; "ocaml"] & S(cclib ["-lm"]);
   (* MOSEK *)
   if with_mosek = "yes" then
     begin
       flag ["compile"; "c"] &
         S[A"-ccopt"; A"-I./sdp"; A"-ccopt"; A mosek_include];
       flag ["ocamlmklib"; "c"] &
         S([A mosek_libdir; A"-cclib"; A mosek_rpath; A mosek_lib; A"-cclib"; A"-pthread"]);
       flag ["link"; "ocaml"] &
         S([A"-ccopt"; A mosek_libdir]@cclib [mosek_rpath; mosek_lib; "-pthread"])
     end
| _ -> ()
end
