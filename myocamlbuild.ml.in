open Ocamlbuild_plugin
open Command

(* Configuration section *)
let csdp_libs = ["-lsdp"; "-llapack"; "-lblas"; "-lm"]
let csdp_libdir = "-L@CSDP_LIBPATH@"
let csdp_include = "-I@CSDP_INCPATH@"

let mosek_libs = ["-lmosek"; "-pthread"]
(* replace -lmosek with -lmosek64 for 64 bits systems *)
let mosek_libdir = "-L@MOSEK_LIBPATH@"
let mosek_include = "-I@MOSEK_INCPATH@"

(* let glpk_include = "@GLPK_PATH@" *)

let cclib l = List.flatten (List.map (fun x -> [A"-cclib"; A x]) l)

;;

dispatch begin function
| After_rules ->
    (* CSDP *)
    flag ["c"; "compile"; "use_csdp"]
      (S[A"-ccopt"; A"-DNOSHORTS"; A"-ccopt"; A csdp_include]);
    flag ["ocaml"; "link"; "use_csdp"]
      (S([A"-ccopt"; A csdp_libdir]@cclib csdp_libs));
    dep  ["ocaml"; "link"; "use_csdp"] ["sdp/csdp_stubs.o"];
    (* MOSEK *)
    flag ["c"; "compile"; "use_mosek"]
      (S[A"-ccopt"; A mosek_include]);
    flag ["ocaml"; "link"; "use_mosek"]
      (S([A"-ccopt"; A mosek_libdir]
         @[A"-ccopt"; A"-Wl,-rpath-link=@MOSEK_LIBPATH@"]@cclib mosek_libs));
    dep  ["ocaml"; "link"; "use_mosek"] ["sdp/moseksdp_stubs.o"];
    (* posdef *)
    flag ["ocaml"; "link"; "use_posdef"] (S(cclib ["-lm"]));
    dep  ["ocaml"; "link"; "use_posdef"] ["cholesky/posdef_stubs.o"];
(*    ocaml_lib ~extern:true ~dir:glpk_include "glpk";*)
| _ -> ()
end
